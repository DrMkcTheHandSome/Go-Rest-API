basePath: /
definitions:
  main.User:
    properties:
      email:
        type: string
      password:
        type: string
      verified_email:
        type: boolean
    type: object
host: localhost:9000
info:
  contact:
    email: marckenneth.lomio@gmail.com
    name: Marc Kenneth Lomio
  description: Go Rest API with SQL SERVER DB
  title: Users Product Go Rest API
  version: "1.0"
paths:
  /:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: show html that navigates to google auth login
  /googlecallback:
    get:
      description: Get details of the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: Google
      summary: Get details of the user
  /migration: {}
  /product: {}
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the product corresponding to the input productId
      parameters:
      - description: ID of the product to be deleted
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete product identified by the given productId
      tags:
      - products
    get:
      consumes:
      - application/json
      description: retrieve the product corresponding to the input productId
      parameters:
      - description: ID of the product to be retrieve
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: retrieve product identified by the given productId
      tags:
      - products
  /products:
    get:
      description: Get details of all products
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get details of all products
  /user: {}
  /user/login:
    get:
      consumes:
      - application/json
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Login user with password
      tags:
      - login
  /user/loginViaGoogle:
    get:
      consumes:
      - application/json
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Login user using google account
      tags:
      - login
  /users:
    get:
      description: Get details of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.User'
            type: array
      summary: Get details of all users
swagger: "2.0"
